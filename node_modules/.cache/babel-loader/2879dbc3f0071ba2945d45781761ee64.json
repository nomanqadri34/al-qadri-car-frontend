{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { getRowFormat, pickProps, toArray } from \"../utils/miscUtil\";\nimport { fillTimeFormat } from \"./useLocale\";\nfunction checkShow(format, keywords, show) {\n  return show !== null && show !== void 0 ? show : keywords.some(function (keyword) {\n    return format.includes(keyword);\n  });\n}\nvar showTimeKeys = [\n// 'format',\n'showNow', 'showHour', 'showMinute', 'showSecond', 'showMillisecond', 'use12Hours', 'hourStep', 'minuteStep', 'secondStep', 'millisecondStep', 'hideDisabledOptions', 'defaultValue', 'disabledHours', 'disabledMinutes', 'disabledSeconds', 'disabledMilliseconds', 'disabledTime', 'changeOnScroll', 'defaultOpenValue'];\n\n/**\n * Get SharedTimeProps from props.\n */\nfunction pickTimeProps(props) {\n  var timeProps = pickProps(props, showTimeKeys);\n  var format = props.format,\n    picker = props.picker;\n  var propFormat = null;\n  if (format) {\n    propFormat = format;\n    if (Array.isArray(propFormat)) {\n      propFormat = propFormat[0];\n    }\n    propFormat = _typeof(propFormat) === 'object' ? propFormat.format : propFormat;\n  }\n  if (picker === 'time') {\n    timeProps.format = propFormat;\n  }\n  return [timeProps, propFormat];\n}\nfunction isStringFormat(format) {\n  return format && typeof format === 'string';\n}\n/**\n * Get `showHour`, `showMinute`, `showSecond` or other from the props.\n * This is pure function, will not get `showXXX` from the `format` prop.\n */\nexport function getTimeProps(componentProps) {\n  var showTime = componentProps.showTime;\n  var _pickTimeProps = pickTimeProps(componentProps),\n    _pickTimeProps2 = _slicedToArray(_pickTimeProps, 2),\n    pickedProps = _pickTimeProps2[0],\n    propFormat = _pickTimeProps2[1];\n  var showTimeConfig = showTime && _typeof(showTime) === 'object' ? showTime : {};\n  var timeConfig = _objectSpread(_objectSpread({\n    defaultOpenValue: showTimeConfig.defaultOpenValue || showTimeConfig.defaultValue\n  }, pickedProps), showTimeConfig);\n  var showMillisecond = timeConfig.showMillisecond;\n  var showHour = timeConfig.showHour,\n    showMinute = timeConfig.showMinute,\n    showSecond = timeConfig.showSecond;\n  if (!showHour && !showMinute && !showSecond && !showMillisecond) {\n    showHour = true;\n    showMinute = true;\n    showSecond = true;\n  }\n  return [timeConfig, _objectSpread(_objectSpread({}, timeConfig), {}, {\n    showHour: showHour,\n    showMinute: showMinute,\n    showSecond: showSecond,\n    showMillisecond: showMillisecond\n  }), timeConfig.format, propFormat];\n}\nexport function fillShowTimeConfig(picker, showTimeFormat, propFormat, timeConfig, locale) {\n  var isTimePicker = picker === 'time';\n  if (picker === 'datetime' || isTimePicker) {\n    var pickedProps = timeConfig;\n\n    // ====================== BaseFormat ======================\n    var defaultLocaleFormat = getRowFormat(picker, locale, null);\n    var baselineFormat = defaultLocaleFormat;\n    var formatList = [showTimeFormat, propFormat];\n    for (var i = 0; i < formatList.length; i += 1) {\n      var format = toArray(formatList[i])[0];\n      if (isStringFormat(format)) {\n        baselineFormat = format;\n        break;\n      }\n    }\n\n    // ========================= Show =========================\n    var showHour = pickedProps.showHour,\n      showMinute = pickedProps.showMinute,\n      showSecond = pickedProps.showSecond,\n      showMillisecond = pickedProps.showMillisecond;\n    var use12Hours = pickedProps.use12Hours;\n    var showMeridiem = checkShow(baselineFormat, ['a', 'A', 'LT', 'LLL', 'LTS'], use12Hours);\n    var hasShowConfig = [showHour, showMinute, showSecond, showMillisecond].some(function (show) {\n      return show !== undefined;\n    });\n\n    // Fill with format, if needed\n    if (!hasShowConfig) {\n      showHour = checkShow(baselineFormat, ['H', 'h', 'k', 'LT', 'LLL']);\n      showMinute = checkShow(baselineFormat, ['m', 'LT', 'LLL']);\n      showSecond = checkShow(baselineFormat, ['s', 'LTS']);\n      showMillisecond = checkShow(baselineFormat, ['SSS']);\n    }\n\n    // Fallback if all can not see\n    if (!hasShowConfig && !showHour && !showMinute && !showSecond && !showMillisecond) {\n      showHour = true;\n      showMinute = true;\n      showSecond = true;\n    }\n\n    // ======================== Format ========================\n    var timeFormat = showTimeFormat || fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem);\n\n    // ======================== Props =========================\n    return _objectSpread(_objectSpread({}, pickedProps), {}, {\n      // Format\n      format: timeFormat,\n      // Show Config\n      showHour: showHour,\n      showMinute: showMinute,\n      showSecond: showSecond,\n      showMillisecond: showMillisecond,\n      use12Hours: showMeridiem\n    });\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}