{"ast":null,"code":"import { useContext } from 'react';\nimport { VariantContext } from '../context';\nexport const Variants = ['outlined', 'borderless', 'filled'];\n/**\n * Compatible for legacy `bordered` prop.\n */\nconst useVariant = function (variant) {\n  let legacyBordered = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  const ctxVariant = useContext(VariantContext);\n  let mergedVariant;\n  if (typeof variant !== 'undefined') {\n    mergedVariant = variant;\n  } else if (legacyBordered === false) {\n    mergedVariant = 'borderless';\n  } else {\n    mergedVariant = ctxVariant !== null && ctxVariant !== void 0 ? ctxVariant : 'outlined';\n  }\n  const enableVariantCls = Variants.includes(mergedVariant);\n  return [mergedVariant, enableVariantCls];\n};\nexport default useVariant;","map":null,"metadata":{},"sourceType":"module"}