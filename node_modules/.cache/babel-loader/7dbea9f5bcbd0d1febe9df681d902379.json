{"ast":null,"code":"import { genSelectionStyle } from '../../select/style/multiple';\nimport { mergeToken } from '../../theme/internal';\nconst genSize = (token, suffix) => {\n  const {\n    componentCls,\n    selectHeight,\n    fontHeight,\n    lineWidth,\n    calc\n  } = token;\n  const suffixCls = suffix ? `${componentCls}-${suffix}` : '';\n  const height = token.calc(fontHeight).add(2).equal();\n  const restHeight = () => calc(selectHeight).sub(height).sub(calc(lineWidth).mul(2));\n  const paddingTop = token.max(restHeight().div(2).equal(), 0);\n  const paddingBottom = token.max(restHeight().sub(paddingTop).equal(), 0);\n  return [genSelectionStyle(token, suffix), {\n    [`${componentCls}-multiple${suffixCls}`]: {\n      paddingTop,\n      paddingBottom,\n      paddingInlineStart: paddingTop\n    }\n  }];\n};\nconst genPickerMultipleStyle = token => {\n  const {\n    componentCls,\n    calc,\n    lineWidth\n  } = token;\n  const smallToken = mergeToken(token, {\n    fontHeight: token.fontSize,\n    selectHeight: token.controlHeightSM,\n    multipleSelectItemHeight: token.controlHeightXS,\n    borderRadius: token.borderRadiusSM,\n    borderRadiusSM: token.borderRadiusXS\n  });\n  const largeToken = mergeToken(token, {\n    fontHeight: calc(token.multipleItemHeightLG).sub(calc(lineWidth).mul(2).equal()).equal(),\n    fontSize: token.fontSizeLG,\n    selectHeight: token.controlHeightLG,\n    multipleSelectItemHeight: token.multipleItemHeightLG,\n    borderRadius: token.borderRadiusLG,\n    borderRadiusSM: token.borderRadius\n  });\n  return [\n  // ======================== Size ========================\n  genSize(smallToken, 'small'), genSize(token), genSize(largeToken, 'large'),\n  // ====================== Selection ======================\n  genSelectionStyle(token), {\n    [`${componentCls}${componentCls}-multiple`]: {\n      width: '100%',\n      // ==================== Selector =====================\n      [`${componentCls}-selector`]: {\n        flex: 'auto',\n        padding: 0,\n        '&:after': {\n          margin: 0\n        }\n      },\n      // ==================== Selection ====================\n      [`${componentCls}-selection-item`]: {\n        marginBlock: 0\n      },\n      // ====================== Input ======================\n      // Input is `readonly`, which is used for a11y only\n      [`${componentCls}-multiple-input`]: {\n        width: 0,\n        height: 0,\n        border: 0,\n        visibility: 'hidden',\n        position: 'absolute',\n        zIndex: -1\n      }\n    }\n  }];\n};\nexport default genPickerMultipleStyle;","map":null,"metadata":{},"sourceType":"module"}